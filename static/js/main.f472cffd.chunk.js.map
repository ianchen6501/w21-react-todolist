{"version":3,"sources":["styledComponent.js","constants.js","todoItem.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","props","theme","colors","main_yellow","TodoWrapper","div","TodoTitle","TodoInput","Input","input","main_blue","main_brown","main_lightgray","UpdateInput","Button","button","TodoContent","ul","TodoItemBody","li","isDone","main_lightbrown","TodoText","InputCheckbox","Select","select","TodoItem","todo","handleDeleteTodo","handleToggleTodo","handleChangeTextToInput","id","onClick","content","type","onInput","checked","TodoItemUpdate","todos","handleUpdateTodoContent","handleEscapeInput","onKeyPress","e","target","value","placeholder","App","useRef","useState","mode","setMode","todoData","window","localStorage","getItem","console","log","length","JSON","parse","current","setTodos","useEffect","setItem","stringify","filter","map","updateMode","charCode","getAttribute","handleTodoItem","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"y6EAKA,IAAMA,EAAMC,IAAOC,IAAV,KAGK,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,eASpCC,EAAcN,IAAOO,IAAV,ICVa,6CDuBxBC,EAAYR,IAAOO,IAAV,KAKTE,EAAYT,IAAOO,IAAV,KAKTG,EAAQV,IAAOW,MAAV,KACF,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAGrB,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,cAG/B,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,kBAInCC,EAAcf,IAAOW,MAAV,KACR,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAGrB,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,cAG/B,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,kBAInCE,EAAShB,IAAOiB,OAAV,KAGQ,SAAAf,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,kBAQ1CI,EAAclB,IAAOmB,GAAV,KAMXC,EAAepB,IAAOqB,GAAV,KAKJ,SAAAnB,GAAK,OAAIA,EAAMoB,OAAQpB,EAAMC,MAAMC,OAAOS,WAAaX,EAAMC,MAAMC,OAAOmB,mBASlFC,EAAWxB,IAAOO,IAAV,KAEL,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOQ,aAOnC,SAAAV,GAAK,OAAIA,EAAMoB,QAAN,mCAGLG,EAAgBzB,IAAOW,MAAV,KAQbe,EAAS1B,IAAO2B,OAAV,KAGM,SAAAzB,GAAK,OAAIA,EAAMC,MAAMC,OAAOS,cACnC,SAAAX,GAAK,OAAIA,EAAMC,MAAMC,OAAOU,kBElHhC,SAASc,EAAT,GAKH,IAJFC,EAIC,EAJDA,KACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,iBACAC,EACC,EADDA,wBAcA,OACE,eAACZ,EAAD,CAAcE,OAAQO,EAAKP,OAA3B,UACA,cAACE,EAAD,CAAUS,GAAIJ,EAAKI,GAAIX,OAAQO,EAAKP,OAAQY,QANd,WAC9B,OAAOF,EAAwBH,EAAKI,KAKpC,SAAiFJ,EAAKM,UACtF,gCACE,cAACV,EAAD,CAAeW,KAAK,WAAWC,QAZV,WACvB,OAAON,EAAiBF,EAAKI,KAWgCK,UAAST,EAAKP,SACzE,cAACN,EAAD,CAAQkB,QAjBc,WACxB,OAAOJ,EAAiBD,EAAKI,KAgB3B,2BAOC,SAASM,EAAT,GAOH,IANFV,EAMC,EANDA,KAEAC,GAIC,EALDU,MAKC,EAJDV,kBACAC,EAGC,EAHDA,iBACAU,EAEC,EAFDA,wBAEC,EADDC,kBAeA,OACE,eAACtB,EAAD,CAAcE,OAAQO,EAAKP,OAA3B,UACA,cAACP,EAAD,CAAa4B,WAPsB,SAACC,GACpC,GAAIA,EAAEC,OAAOC,MACb,OAAOL,EAAwBG,IAKwBX,GAAIJ,EAAKI,GAAIc,YAAalB,EAAKM,UACtF,gCACE,cAACV,EAAD,CAAeW,KAAK,WAAWC,QAbV,WACvB,OAAON,EAAiBF,EAAKI,KAYgCK,UAAST,EAAKP,SACzE,cAACN,EAAD,CAAQkB,QAlBc,WACxB,OAAOJ,EAAiBD,EAAKI,KAiB3B,2B,OCqFSe,MAzIf,WACE,IAAMf,EAAKgB,iBAAO,GADL,EAEWC,mBAAS,OAFpB,mBAENC,EAFM,KAEAC,EAFA,OAIaF,oBAAS,WACjC,IAAIG,EAAWC,OAAOC,aAAaC,QAAQ,SAQ3C,OAPAC,QAAQC,IAAIL,EAASM,QACjBN,GACFA,EAAWO,KAAKC,MAAMR,GACtBpB,EAAG6B,QAAUT,EAASA,EAASM,OAAS,GAAG1B,GAAK,GAEhDoB,EAAW,GAENA,KAbI,mBAINb,EAJM,KAICuB,EAJD,KAgCbC,qBAAU,WACRV,OAAOC,aAAaU,QAAQ,QAASL,KAAKM,UAAU1B,MACnD,CAACA,IAEJ,IAAMV,EAAmB,SAACG,GACxB8B,EACEvB,EAAM2B,QACJ,SAAAtC,GAAI,OAAIA,EAAKI,KAAOA,OAKpBF,EAAmB,SAACE,GACxB8B,EAASvB,EAAM4B,KAAI,SAAAvC,GACjB,OAAGA,EAAKI,KAAOA,EAAYJ,EACpB,2BACFA,GADL,IAEEP,QAASO,EAAKP,cASdU,EAA0B,SAACC,GAC/B8B,EAASvB,EAAM4B,KAAI,SAAAvC,GACjB,OAAGA,EAAKI,KAAOA,EAAYJ,EACpB,2BACFA,GADL,IAEEwC,YAAY,SAKZ5B,EAA0B,SAACG,GAC/B,GAAiB,IAAdA,EAAE0B,SAAgB,CACnB,IAAMrC,EAAKW,EAAEC,OAAO0B,aAAa,MAC3BzB,EAAQF,EAAEC,OAAOC,MACvBiB,EAASvB,EAAM4B,KAAI,SAAAvC,GACjB,OAAGA,EAAKI,IAAMA,EAAWJ,EAClB,2BACFA,GADL,IAEEM,QAASW,EACTuB,YAAY,UAMd3B,EAAoB,SAACT,GACzB8B,EAASvB,EAAM4B,KAAI,SAAAvC,GACjB,OAAGA,EAAKI,IAAMA,EAAWJ,EAClB,2BACFA,GADL,IAEEwC,YAAY,SAKlB,SAASG,EAAgB3C,GACvB,OAAIA,EAAKwC,WAML,cAAC9B,EAAD,CAA8BV,KAAMA,EAAMW,MAAOA,EAAOV,iBAAkBA,EAAkBC,iBAAkBA,EAAkBC,wBAAyBA,EAAyBS,wBAAyBA,EAAyBC,kBAAmBA,GAAlOb,EAAKI,IAJ1B,cAACL,EAAD,CAAwBC,KAAMA,EAAMW,MAAOA,EAAOV,iBAAkBA,EAAkBC,iBAAkBA,EAAkBC,wBAAyBA,EAAyBS,wBAAyBA,EAAyBC,kBAAmBA,GAAlOb,EAAKI,IAS1B,OACE,gCACE,cAAClC,EAAD,8BACA,eAACO,EAAD,WACE,cAACE,EAAD,IACA,cAACC,EAAD,UACE,cAACC,EAAD,CAAOqC,YAAY,oBAAoBJ,WA/FzB,SAACC,GACrB,GAAIA,EAAEC,OAAOC,MACb,OAAiB,IAAdF,EAAE0B,UACHP,EAAS,GAAD,mBAAKvB,GAAL,CAAY,CAClBP,GAAIA,EAAG6B,QACP3B,QAASS,EAAEC,OAAOC,MAClBxB,QAAQ,EACR+C,YAAY,MAEdpC,EAAG6B,eACHlB,EAAEC,OAAOC,MAAQ,UARnB,OA+FI,eAAC5B,EAAD,WACY,QAATiC,GACCX,EAAM4B,KAAI,SAAAvC,GAAI,OAAI2C,EAAe3C,MAGzB,gBAATsB,GACCX,EAAM4B,KAAI,SAAAvC,GAAI,OAAKA,EAAKP,QAAUkD,EAAe3C,MAGzC,cAATsB,GACCX,EAAM4B,KAAI,SAAAvC,GAAI,OAAIA,EAAKP,QAAUkD,EAAe3C,SAIpD,eAACH,EAAD,CAAQ+C,SAzEW,SAAC7B,GACxBQ,EAAQR,EAAEC,OAAOC,QAwEb,UACE,yCACA,iDACA,yDC7HK4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCUdQ,IAASC,OACP,cAAC,IAAD,CAAejF,MAXH,CACZC,OAAQ,CACNC,YAAa,UACbO,UAAW,UACXC,WAAY,UACZU,gBAAiB,UACjBT,eAAgB,YAKlB,SACE,cAAC,EAAD,MAEFuE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f472cffd.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport {MEDIA_QUERY_ES, MEDIA_QUERY_SM, MEDIA_QUERY_MD, MEDIA_QUERY_LG, MEDIA_QUERY_XL} from './constants'\r\n\r\n\r\nconst Nav = styled.nav`\r\nheight: 12vh;\r\nmin-height: 80px;\r\nbackground: ${props => props.theme.colors.main_yellow};\r\ncolor: white;\r\nfont-size: 4rem;\r\nvertical-align: middle;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`\r\n\r\nconst TodoWrapper = styled.div`\r\nposition: relative;\r\nleft: 50%;\r\nwidth: 90%;\r\ntransform: translate(-50%, 0%);\r\nmargin-top: 30px;\r\n\r\n\r\n${MEDIA_QUERY_MD} {\r\n  width: 50%;\r\n}\r\n`\r\n\r\nconst TodoTitle = styled.div`\r\ncolor: white;\r\nfont-size: 20px;\r\n`\r\n\r\nconst TodoInput = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\n\r\nconst Input = styled.input`\r\ncolor: ${props => props.theme.colors.main_blue};\r\nheight: 3rem;\r\nwidth: 100%;\r\nborder: solid ${props => props.theme.colors.main_brown} 2px;\r\nfont-size: 2.2rem;\r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.main_lightgray};\r\n  }\r\n`\r\n\r\nconst UpdateInput = styled.input`\r\ncolor: ${props => props.theme.colors.main_blue};\r\nheight: 3rem;\r\nwidth: 60%;\r\nborder: solid ${props => props.theme.colors.main_brown} 2px;\r\nfont-size: 2.2rem;\r\n  &::placeholder {\r\n    color: ${props => props.theme.colors.main_lightgray};\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\npadding: 8px 10px ;\r\nfont-size: 1.2rem;\r\nbackground-color: ${props => props.theme.colors.main_lightgray};\r\n\r\n& {\r\n  margin: 0px 30px;\r\n  border: solid 0px;\r\n}\r\n`\r\n\r\nconst TodoContent = styled.ul`\r\n  & {\r\n    padding: 0px;\r\n  }\r\n`\r\n\r\nconst TodoItemBody = styled.li`\r\nheight: 4rem;\r\nmargin-top: 20px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nbackground: ${props => props.isDone? props.theme.colors.main_brown : props.theme.colors.main_lightbrown};\r\nalign-items: center;\r\npadding: 30px;\r\n  & div + div, input + div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst TodoText = styled.div`\r\nwidth: 60%;\r\ncolor: ${props => props.theme.colors.main_blue};\r\nfont-size: 30px;\r\ntext-decoration:none;\r\nmargin-left: 2rem;\r\ndisplay: inline-block;\r\nwhite-space: normal;\r\nword-wrap:break-word;\r\n${props => props.isDone && `text-decoration: line-through`};\r\n`\r\n\r\nconst InputCheckbox = styled.input`\r\n  height: 35px;\r\n  width: 35px;\r\n\r\n  &:checked {\r\n    background: red;\r\n  }\r\n`\r\nconst Select = styled.select`\r\n  height: 35px;\r\n  font-size: 20px;\r\n  border: solid ${props => props.theme.colors.main_brown} 2px;\r\n  color: ${props => props.theme.colors.main_lightgray};\r\n  margin-bottom: 50px;\r\n`\r\n\r\nexport { Nav, TodoWrapper, TodoTitle, TodoInput, Input, UpdateInput, Button, TodoContent, TodoItemBody, TodoText, InputCheckbox, Select}","/* Extra small devices (phones, 600px and down) */\r\nexport const MEDIA_QUERY_ES = '@media only screen and (max-width: 600px)'\r\n\r\n/* Small devices (portrait tablets and large phones, 600px and up) */\r\nexport const MEDIA_QUERY_SM = '@media only screen and (min-width: 600px)'\r\n\r\n/* Medium devices (landscape tablets, 768px and up) */\r\nexport const MEDIA_QUERY_MD = '@media only screen and (min-width: 768px)'\r\n\r\n/* Large devices (laptops/desktops, 992px and up) */\r\nexport const MEDIA_QUERY_LG = '@media only screen and (min-width: 992px)'\r\n\r\n/* Extra large devices (large laptops and desktops, 1200px and up) */\r\nexport const MEDIA_QUERY_XL = '@media only screen and (min-width: 1200px)'","import {UpdateInput, Button, TodoItemBody, TodoText, InputCheckbox} from './styledComponent';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function TodoItem({\r\n  todo, \r\n  handleDeleteTodo, \r\n  handleToggleTodo,\r\n  handleChangeTextToInput,\r\n}) {\r\n  const handleDeleteClick = () => {\r\n    return handleDeleteTodo(todo.id)\r\n  }\r\n\r\n  const handleToggleClick =() => {\r\n    return handleToggleTodo(todo.id)\r\n  }\r\n\r\n  const handleChangeToInputClick =() => {\r\n    return handleChangeTextToInput(todo.id)\r\n  }\r\n\r\n  return (\r\n    <TodoItemBody isDone={todo.isDone}>\r\n    <TodoText id={todo.id} isDone={todo.isDone} onClick={handleChangeToInputClick} >{todo.content}</TodoText>\r\n    <div>\r\n      <InputCheckbox type=\"checkbox\" onInput={handleToggleClick} checked={todo.isDone? true : false}/>\r\n      <Button onClick={handleDeleteClick}> delete</Button>\r\n    </div>\r\n    </TodoItemBody>\r\n  )\r\n}\r\n\r\n\r\nexport function TodoItemUpdate({\r\n  todo,\r\n  todos,\r\n  handleDeleteTodo, \r\n  handleToggleTodo,\r\n  handleUpdateTodoContent,\r\n  handleEscapeInput\r\n}) {\r\n  const handleDeleteClick = () => {\r\n    return handleDeleteTodo(todo.id)\r\n  }\r\n\r\n  const handleToggleClick =() => {\r\n    return handleToggleTodo(todo.id)\r\n  }\r\n\r\n  const handleUptateTodoContentClick = (e) => {\r\n    if(!e.target.value) return\r\n    return handleUpdateTodoContent(e)\r\n  }\r\n\r\n  return (\r\n    <TodoItemBody isDone={todo.isDone}>\r\n    <UpdateInput onKeyPress={handleUptateTodoContentClick} id={todo.id} placeholder={todo.content}/>\r\n    <div>\r\n      <InputCheckbox type=\"checkbox\" onInput={handleToggleClick} checked={todo.isDone? true : false}/>\r\n      <Button onClick={handleDeleteClick}> delete</Button>\r\n    </div>\r\n    </TodoItemBody>\r\n  )\r\n}","import './App.css';\nimport { useState, useEffect, useRef } from \"react\";\nimport {Nav, TodoWrapper, TodoTitle, TodoInput, Input, Button, TodoContent, TodoItemBody, TodoText, InputCheckbox, Select} from './styledComponent'\nimport { TodoItem, TodoItemUpdate } from './todoItem'\nimport { Component } from 'react';\nimport { cleanup } from '@testing-library/react';\n\nfunction App() {\n  const id = useRef(1)\n  const [mode, setMode] = useState(\"All\")\n\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem('todos')\n    console.log(todoData.length)\n    if (todoData) {\n      todoData = JSON.parse(todoData)\n      id.current = todoData[todoData.length - 1].id + 1\n    } else {\n      todoData = []\n    }\n    return todoData\n  })\n\n  const handleAddTodos =(e) => {\n    if(!e.target.value) return\n    if(e.charCode == 13) {\n      setTodos([...todos, {\n        id: id.current,\n        content: e.target.value,\n        isDone: false,\n        updateMode: false,\n      }])\n      id.current++\n      e.target.value = \"\"\n      return\n    }\n    return\n  }\n\n  useEffect(() => {\n    window.localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const handleDeleteTodo = (id) => {\n    setTodos(\n      todos.filter(\n        todo => todo.id !== id\n      )\n    )\n  }\n\n  const handleToggleTodo = (id) => {\n    setTodos(todos.map(todo => {\n      if(todo.id !== id ) return todo\n      return {\n        ...todo, \n        isDone: !todo.isDone\n      }\n    }))\n  }\n\n  const handleChangeMode = (e) => {\n    setMode(e.target.value)\n  }\n\n  const handleChangeTextToInput = (id) => {\n    setTodos(todos.map(todo => {\n      if(todo.id !== id ) return todo\n      return {\n        ...todo, \n        updateMode: true\n      }\n    }))\n  }\n\n  const handleUpdateTodoContent = (e) => {\n    if(e.charCode == 13) {\n      const id = e.target.getAttribute('id')\n      const value = e.target.value\n      setTodos(todos.map(todo => {\n        if(todo.id != id) return todo\n        return {\n          ...todo,\n          content: value,\n          updateMode: false\n        }\n      }))\n    }\n  }\n\n  const handleEscapeInput = (id) => {\n    setTodos(todos.map(todo => {\n      if(todo.id != id) return todo\n      return {\n        ...todo,\n        updateMode: false\n      }\n    }))\n  }\n\n  function handleTodoItem (todo) {\n    if(!todo.updateMode) {\n      return (\n        <TodoItem key={todo.id} todo={todo} todos={todos} handleDeleteTodo={handleDeleteTodo} handleToggleTodo={handleToggleTodo} handleChangeTextToInput={handleChangeTextToInput} handleUpdateTodoContent={handleUpdateTodoContent} handleEscapeInput={handleEscapeInput}/>\n      )\n    } else {\n      return (\n        <TodoItemUpdate key={todo.id} todo={todo} todos={todos} handleDeleteTodo={handleDeleteTodo} handleToggleTodo={handleToggleTodo} handleChangeTextToInput={handleChangeTextToInput} handleUpdateTodoContent={handleUpdateTodoContent} handleEscapeInput={handleEscapeInput}/>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Nav>React Todo List</Nav>\n      <TodoWrapper>\n        <TodoTitle></TodoTitle>\n        <TodoInput>\n          <Input placeholder=\" + type your list\" onKeyPress={handleAddTodos}></Input>\n        </TodoInput>\n        <TodoContent>\n          {mode === \"All\" && \n            todos.map(todo => handleTodoItem(todo)\n            )\n          }\n          {mode === \"Uncompleted\" && \n            todos.map(todo => !todo.isDone && handleTodoItem(todo)\n            )\n          }\n          {mode === \"Completed\" && \n            todos.map(todo => todo.isDone && handleTodoItem(todo)\n            )\n          }\n        </TodoContent>\n        <Select onChange={handleChangeMode}>\n          <option>All</option>\n          <option>Uncompleted</option>\n          <option>Completed</option>\n        </Select>\n      </TodoWrapper>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    main_yellow: '#DECF1C',\n    main_blue: '#233346',\n    main_brown: '#AD9C7E',\n    main_lightbrown: '#F3DDC6',\n    main_lightgray: '#bebebe',\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}